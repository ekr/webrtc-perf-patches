From 1d6590a50cc065af968399e799cb216b626e377c Mon Sep 17 00:00:00 2001
From: slee <slee@mozilla.com>
Date: Wed, 22 May 2013 10:28:33 +0800
Subject: [PATCH 5/9] reduce the calling frequency of the timer thread

---
 .../video_coding/main/source/video_coding_impl.cc  | 30 ++++++++++++++--------
 .../video_coding/main/source/video_coding_impl.h   |  2 +-
 2 files changed, 20 insertions(+), 12 deletions(-)

diff --git a/media/webrtc/trunk/webrtc/modules/video_coding/main/source/video_coding_impl.cc b/media/webrtc/trunk/webrtc/modules/video_coding/main/source/video_coding_impl.cc
index 8fba7de..86f823f 100644
--- a/media/webrtc/trunk/webrtc/modules/video_coding/main/source/video_coding_impl.cc
+++ b/media/webrtc/trunk/webrtc/modules/video_coding/main/source/video_coding_impl.cc
@@ -30,11 +30,17 @@ VCMProcessTimer::Period() const
 }
 
 WebRtc_UWord32
-VCMProcessTimer::TimeUntilProcess() const
+VCMProcessTimer::TimeUntilProcess(WebRtc_UWord64 now) const
 {
+    if (now == 0) {
+      now = _clock->MillisecondTimestamp();
+    }
+#ifdef DEBUG
+    assert(now - _latestMs >= 0);
+#endif
     return static_cast<WebRtc_UWord32>(
         VCM_MAX(static_cast<WebRtc_Word64>(_periodMs) -
-                (_clock->MillisecondTimestamp() - _latestMs), 0));
+                static_cast<WebRtc_Word64>(now - _latestMs), 0));
 }
 
 void
@@ -136,8 +142,10 @@ VideoCodingModuleImpl::Process()
 {
     WebRtc_Word32 returnValue = VCM_OK;
 
+    WebRtc_UWord64 now = clock_->MillisecondTimestamp();
+
     // Receive-side statistics
-    if (_receiveStatsTimer.TimeUntilProcess() == 0)
+    if (_receiveStatsTimer.TimeUntilProcess(now) == 0)
     {
         _receiveStatsTimer.Processed();
         if (_receiveStatsCallback != NULL)
@@ -150,7 +158,7 @@ VideoCodingModuleImpl::Process()
     }
 
     // Send-side statistics
-    if (_sendStatsTimer.TimeUntilProcess() == 0)
+    if (_sendStatsTimer.TimeUntilProcess(now) == 0)
     {
         _sendStatsTimer.Processed();
         if (_sendStatsCallback != NULL)
@@ -169,7 +177,7 @@ VideoCodingModuleImpl::Process()
     }
 
     // Packet retransmission requests
-    if (_retransmissionTimer.TimeUntilProcess() == 0)
+    if (_retransmissionTimer.TimeUntilProcess(now) == 0)
     {
         _retransmissionTimer.Processed();
         if (_packetRequestCallback != NULL)
@@ -189,7 +197,7 @@ VideoCodingModuleImpl::Process()
     }
 
     // Key frame requests
-    if (_keyRequestTimer.TimeUntilProcess() == 0)
+    if (_keyRequestTimer.TimeUntilProcess(now) == 0)
     {
         _keyRequestTimer.Processed();
         if (_scheduleKeyRequest && _frameTypeCallback != NULL)
@@ -201,7 +209,6 @@ VideoCodingModuleImpl::Process()
             }
         }
     }
-
     return returnValue;
 }
 
@@ -232,19 +239,20 @@ VideoCodingModuleImpl::ChangeUniqueId(const WebRtc_Word32 id)
 WebRtc_Word32
 VideoCodingModuleImpl::TimeUntilNextProcess()
 {
+    WebRtc_UWord64 now = clock_->MillisecondTimestamp();
     WebRtc_UWord32 timeUntilNextProcess = VCM_MIN(
-                                    _receiveStatsTimer.TimeUntilProcess(),
-                                    _sendStatsTimer.TimeUntilProcess());
+                                    _receiveStatsTimer.TimeUntilProcess(now),
+                                    _sendStatsTimer.TimeUntilProcess(now));
     if ((_receiver.NackMode() != kNoNack) ||
         (_dualReceiver.State() != kPassive))
     {
         // We need a Process call more often if we are relying on
         // retransmissions
         timeUntilNextProcess = VCM_MIN(timeUntilNextProcess,
-                                       _retransmissionTimer.TimeUntilProcess());
+                                       _retransmissionTimer.TimeUntilProcess(now));
     }
     timeUntilNextProcess = VCM_MIN(timeUntilNextProcess,
-                                   _keyRequestTimer.TimeUntilProcess());
+                                   _keyRequestTimer.TimeUntilProcess(now));
 
     return timeUntilNextProcess;
 }
diff --git a/media/webrtc/trunk/webrtc/modules/video_coding/main/source/video_coding_impl.h b/media/webrtc/trunk/webrtc/modules/video_coding/main/source/video_coding_impl.h
index 80e3c81..5d3c6fa 100644
--- a/media/webrtc/trunk/webrtc/modules/video_coding/main/source/video_coding_impl.h
+++ b/media/webrtc/trunk/webrtc/modules/video_coding/main/source/video_coding_impl.h
@@ -37,7 +37,7 @@ public:
           _periodMs(periodMs),
           _latestMs(_clock->MillisecondTimestamp()) {}
     WebRtc_UWord32 Period() const;
-    WebRtc_UWord32 TimeUntilProcess() const;
+    WebRtc_UWord32 TimeUntilProcess(WebRtc_UWord64 now = 0) const;
     void Processed();
 
 private:
-- 
1.7.12.4 (Apple Git-37)

